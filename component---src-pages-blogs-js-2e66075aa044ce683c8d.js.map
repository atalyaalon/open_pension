{"version":3,"sources":["webpack:///./src/pages/blogs.js","webpack:///./src/components/Breadcrumbs/Breadcrumbs.js","webpack:///./src/components/Sections/Blogs/Blogs.js"],"names":["query","BlogsPage","data","className","charSet","rel","href","path","paths","homepage","title","blogs","articles","Breadcrumbs","entityLabel","crumbs","split","map","item","index","length","key","to","state","fromFeed","BlogsGrid","props","drupal","nodeQuery","entities","result","body","value","replace","alias","substr","src","fieldImage","gatsbyImageFile","childImageSharp","fluid","alt","Blogs","render","id"],"mappings":"0mEAAA,kIA4BaA,EAAK,aAmCHC,UAtDG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,kBAAC,IAAD,KAE9B,yBAAKC,UAAU,cACb,kBAAC,IAAD,KACE,0BAAMC,QAAQ,UACd,uDACA,0BAAMC,IAAI,YAAYC,KAAK,0CAG7B,kBAAC,IAAD,CAAaC,KAAK,mBAElB,yBAAKJ,UAAU,WACb,kBAAC,IAAD,CAAWD,KAAMA,S,sJCjBjBM,EAAQ,CACZC,SAAU,CACRC,MAAO,YACPH,KAAM,KAERI,MAAO,CACLD,MAAO,SACPH,KAAM,SAERK,SAAU,CACRF,MAAO,oBACPH,KAAM,aAGGM,EAAc,SAAC,GAAyB,IAAxBN,EAAuB,EAAvBA,KAAMO,EAAiB,EAAjBA,YAC3BC,EAASR,EAAKS,MAAM,KAE1B,OAAO,wBAAIb,UAAU,cAClBY,EAAOE,KAAI,SAACC,EAAMC,GACjB,OAAIA,EAAQ,IAAMJ,EAAOK,OACV,kBAATF,EACKJ,EAGF,wBAAIO,IAAKF,EAAOhB,UAAU,SAASK,EAAMU,GAAMR,OAGjD,wBAAIW,IAAKF,EAAOhB,UAAU,SAC/B,kBAAC,IAAD,CACEmB,GAAId,EAAMU,GAAMX,KAChBgB,MAAO,CAACC,UAAU,GAClBrB,UAAU,eACTK,EAAMU,GAAMR,OALV,a,+MCoBAe,G,UAAY,SAACC,GAAD,OACvB,yBAAKvB,UAAU,gBACZuB,EAAMxB,KAAKyB,OAAOC,UAAUC,SAASZ,KAAI,SAACC,GAAD,OAbtCY,EAAM,WAFO5B,EAewCgB,GAbvCa,YAAR,aAAG,EAAWC,MAAMC,QADlB,gBACiC,IAExC,6BACL,wBAAI9B,UAAU,SAAQ,uBAAGG,KAAMJ,EAAKK,KAAK2B,OAAQhC,EAAKQ,QAEtD,uBAAGP,UAAU,SAAS2B,EAAOK,OAAO,EAAG,MAEvC,yBAAKC,IAAKlC,EAAKmC,WAAWC,gBAAgBC,gBAAgBC,MAAMJ,IAAKK,IAAKvC,EAAKmC,WAAWI,OAT1E,IAACvC,EAAS,EAEtB4B,QAgCKY,EAAQ,kBAAM,kBAAC,IAAD,CAAa1C,MApE7B,aAoE2C2C,OAAQ,SAAAzC,GAAS,OAhBzD,SAACA,GAAD,OAAU,6BAASC,UAAU,QAAQyC,GAAG,SACpD,yBAAKzC,UAAU,QACb,uBAAGA,UAAU,UAAb,mBAEA,8CAEA,uBAAGA,UAAU,OAAb,sDAIA,kBAACsB,EAAD,CAAWvB,KAAMA,IAEjB,kBAAC,IAAD,CAAMoB,GAAG,SAASnB,UAAU,mBAA5B,+BAI0EQ,CAAMT,IAAzD","file":"component---src-pages-blogs-js-2e66075aa044ce683c8d.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport \"./pages.scss\"\n\nimport {Wrapper} from \"../components/Page\";\nimport {Breadcrumbs} from \"../components/Breadcrumbs/Breadcrumbs\";\nimport {BlogsGrid} from \"../components/Sections/Blogs/Blogs\";\nimport {Helmet} from \"react-helmet\";\n\nconst BlogsPage = ({ data }) => <Wrapper>\n\n  <div className=\"inner-page\">\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>פנסיה פתוחה | בלוגים</title>\n      <link rel=\"canonical\" href=\"https://www.openpension.org.il/blogs\" />\n    </Helmet>\n\n    <Breadcrumbs path=\"homepage.blogs\" />\n\n    <div className=\"content\">\n      <BlogsGrid data={data} />\n    </div>\n\n  </div>\n\n</Wrapper>\n\nexport const query = graphql`\n{\n  drupal {\n    nodeQuery(\n      filter: {conditions: {field: \"type\", value: \"blog\"}} \n      sort: {field: \"created\", direction: DESC}\n    ) {\n      entities {\n        ... on drupal_NodeBlog {\n          nid\n          title\n          body {\n            value\n          }\n          path {\n            alias\n          }\n          fieldImage {\n            alt\n            url\n            gatsbyImageFile {\n              childImageSharp {\n                fluid(maxHeight: 300)  {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default BlogsPage\n","import React from \"react\";\nimport \"./style.scss\"\nimport { Link } from \"gatsby\"\n\nconst paths = {\n  homepage: {\n    title: 'עמוד ראשי',\n    path: '/'\n  },\n  blogs: {\n    title: 'בלוגים',\n    path: 'blogs'\n  },\n  articles: {\n    title: 'כתבו עלינו בעיתון',\n    path: 'articles'\n  }\n}\nexport const Breadcrumbs = ({path, entityLabel}) => {\n  const crumbs = path.split('.');\n\n  return <ul className=\"breadcrumb\">\n    {crumbs.map((item, index) => {\n      if (index + 1 === crumbs.length) {\n        if (item === '<entityLabel>') {\n          return entityLabel;\n        }\n\n        return <li key={index} className=\"crumb\">{paths[item].title}</li>\n      }\n\n      return <li key={index} className=\"crumb\">\n        <Link\n          to={paths[item].path}\n          state={{fromFeed: true}}\n          className=\"simple-link\">\n          {paths[item].title}\n        </Link> >>\n      </li>\n    })}\n  </ul>\n}\n\n\n","import React from \"react\"\nimport { graphql, StaticQuery, Link } from \"gatsby\"\nimport \"./style.scss\";\n\nconst query = graphql`{\n  drupal {\n    nodeQuery(\n      limit: 3, \n      filter: {conditions: {field: \"type\", value: \"blog\"}},\n      sort: {field: \"created\", direction: DESC}\n    ) {\n      entities {\n        ... on drupal_NodeBlog {\n          title\n          body {\n            value\n          }\n          path {\n            alias\n          }\n          fieldImage {\n            alt\n            url\n            gatsbyImageFile {\n              childImageSharp {\n                fluid(maxHeight: 300)  {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const blog = (data) => {\n  const regex = /(<([^>]+)>)/ig;\n  const result = data.body?.value.replace(regex, '');\n\n  return <div>\n    <h3 className=\"title\"><a href={data.path.alias}>{data.title}</a></h3>\n\n    <p className=\"intro\">{result.substr(0, 350)}</p>\n\n    <img src={data.fieldImage.gatsbyImageFile.childImageSharp.fluid.src} alt={data.fieldImage.alt} />\n  </div>\n}\n\nexport const BlogsGrid = (props) =>\n  <div className=\"grid-display\">\n    {props.data.drupal.nodeQuery.entities.map((item) => blog(item))}\n  </div>\n\nconst blogs = (data) => <section className=\"tools\" id=\"tools\">\n  <div className=\"text\">\n    <p className=\"medium\">מה יש לנו להגיד</p>\n\n    <h2>בלוגים אחרונים</h2>\n\n    <p className=\"big\">\n      הנה התובנות האחרנות שלנו בהתבסס על הנתונים שאספנו.\n    </p>\n\n    <BlogsGrid data={data} />\n\n    <Link to=\"/blogs\" className=\"big simple-link\">יש עוד בלוגים... בוא תקרא</Link>\n  </div>\n</section>\n\nexport const Blogs = () => <StaticQuery query={query} render={data => {return blogs(data)}}></StaticQuery>\n\n"],"sourceRoot":""}