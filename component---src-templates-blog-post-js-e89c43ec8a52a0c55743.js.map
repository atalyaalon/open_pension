{"version":3,"sources":["webpack:///./src/components/Breadcrumbs/Breadcrumbs.js","webpack:///./node_modules/dateformat/lib/dateformat.js","webpack:///./src/templates/blog-post.js"],"names":["paths","homepage","title","path","blogs","articles","Breadcrumbs","entityLabel","crumbs","split","className","map","item","index","length","key","to","state","fromFeed","global","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","arguments","kindOf","test","undefined","Date","isNaN","TypeError","maskSlice","String","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","timeNames","tt","T","TT","Z","match","pop","replace","floor","abs","S","val","len","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","dow","Array","isArray","toString","call","toLowerCase","blog","data","drupal","nodeById","charSet","rel","href","alias","dateformat","created","entityOwner","name","dangerouslySetInnerHTML","__html","body","value","query"],"mappings":"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","file":"component---src-templates-blog-post-js-e89c43ec8a52a0c55743.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\"\nimport { Link } from \"gatsby\"\n\nconst paths = {\n  homepage: {\n    title: 'עמוד ראשי',\n    path: '/'\n  },\n  blogs: {\n    title: 'בלוגים',\n    path: 'blogs'\n  },\n  articles: {\n    title: 'כתבו עלינו בעיתון',\n    path: 'articles'\n  }\n}\nexport const Breadcrumbs = ({path, entityLabel}) => {\n  const crumbs = path.split('.');\n\n  return <ul className=\"breadcrumb\">\n    {crumbs.map((item, index) => {\n      if (index + 1 === crumbs.length) {\n        if (item === '<entityLabel>') {\n          return entityLabel;\n        }\n\n        return <li key={index} className=\"crumb\">{paths[item].title}</li>\n      }\n\n      return <li key={index} className=\"crumb\">\n        <Link\n          to={paths[item].path}\n          state={{fromFeed: true}}\n          className=\"simple-link\">\n          {paths[item].title}\n        </Link> >>\n      </li>\n    })}\n  </ul>\n}\n\n\n","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n(function (global) {\n  'use strict';\n\n  var dateFormat = function () {\n    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    var timezoneClip = /[^-+\\dA-Z]/g; // Regexes and supporting functions are cached through closure\n\n    return function (date, mask, utc, gmt) {\n      // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n      if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n        mask = date;\n        date = undefined;\n      }\n\n      date = date || new Date();\n\n      if (!(date instanceof Date)) {\n        date = new Date(date);\n      }\n\n      if (isNaN(date)) {\n        throw TypeError('Invalid date');\n      }\n\n      mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']); // Allow setting the utc/gmt argument via the mask\n\n      var maskSlice = mask.slice(0, 4);\n\n      if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n        mask = mask.slice(4);\n        utc = true;\n\n        if (maskSlice === 'GMT:') {\n          gmt = true;\n        }\n      }\n\n      var _ = utc ? 'getUTC' : 'get';\n\n      var d = date[_ + 'Date']();\n\n      var D = date[_ + 'Day']();\n\n      var m = date[_ + 'Month']();\n\n      var y = date[_ + 'FullYear']();\n\n      var H = date[_ + 'Hours']();\n\n      var M = date[_ + 'Minutes']();\n\n      var s = date[_ + 'Seconds']();\n\n      var L = date[_ + 'Milliseconds']();\n\n      var o = utc ? 0 : date.getTimezoneOffset();\n      var W = getWeek(date);\n      var N = getDayOfWeek(date);\n      var flags = {\n        d: d,\n        dd: pad(d),\n        ddd: dateFormat.i18n.dayNames[D],\n        dddd: dateFormat.i18n.dayNames[D + 7],\n        m: m + 1,\n        mm: pad(m + 1),\n        mmm: dateFormat.i18n.monthNames[m],\n        mmmm: dateFormat.i18n.monthNames[m + 12],\n        yy: String(y).slice(2),\n        yyyy: y,\n        h: H % 12 || 12,\n        hh: pad(H % 12 || 12),\n        H: H,\n        HH: pad(H),\n        M: M,\n        MM: pad(M),\n        s: s,\n        ss: pad(s),\n        l: pad(L, 3),\n        L: pad(Math.round(L / 10)),\n        t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n        tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n        T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n        TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n        Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n        o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n        S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n        W: W,\n        N: N\n      };\n      return mask.replace(token, function (match) {\n        if (match in flags) {\n          return flags[match];\n        }\n\n        return match.slice(1, match.length - 1);\n      });\n    };\n  }();\n\n  dateFormat.masks = {\n    'default': 'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate': 'm/d/yy',\n    'mediumDate': 'mmm d, yyyy',\n    'longDate': 'mmmm d, yyyy',\n    'fullDate': 'dddd, mmmm d, yyyy',\n    'shortTime': 'h:MM TT',\n    'mediumTime': 'h:MM:ss TT',\n    'longTime': 'h:MM:ss TT Z',\n    'isoDate': 'yyyy-mm-dd',\n    'isoTime': 'HH:MM:ss',\n    'isoDateTime': 'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime': 'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat': 'ddd, dd mmm yyyy HH:MM:ss Z'\n  }; // Internationalization strings\n\n  dateFormat.i18n = {\n    dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n  };\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n\n    while (val.length < len) {\n      val = '0' + val;\n    }\n\n    return val;\n  }\n  /**\n   * Get the ISO 8601 week number\n   * Based on comments from\n   * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   *\n   * @param  {Object} `date`\n   * @return {Number}\n   */\n\n\n  function getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Change date to Thursday same week\n\n    targetThursday.setDate(targetThursday.getDate() - (targetThursday.getDay() + 6) % 7 + 3); // Take January 4th as it is always in week 1 (see ISO 8601)\n\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4); // Change date to Thursday same week\n\n    firstThursday.setDate(firstThursday.getDate() - (firstThursday.getDay() + 6) % 7 + 3); // Check if daylight-saving-time-switch occurred and correct for it\n\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds); // Number of weeks between target Thursday and first Thursday\n\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n  }\n  /**\n   * Get ISO-8601 numeric representation of the day of the week\n   * 1 (for Monday) through 7 (for Sunday)\n   * \n   * @param  {Object} `date`\n   * @return {Number}\n   */\n\n\n  function getDayOfWeek(date) {\n    var dow = date.getDay();\n\n    if (dow === 0) {\n      dow = 7;\n    }\n\n    return dow;\n  }\n  /**\n   * kind-of shortcut\n   * @param  {*} val\n   * @return {String}\n   */\n\n\n  function kindOf(val) {\n    if (val === null) {\n      return 'null';\n    }\n\n    if (val === undefined) {\n      return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n      return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n      return 'array';\n    }\n\n    return {}.toString.call(val).slice(8, -1).toLowerCase();\n  }\n\n  ;\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);","import React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {Wrapper} from \"../components/Page\";\nimport {Breadcrumbs} from \"../components/Breadcrumbs/Breadcrumbs\";\nimport \"./blog-post.scss\"\nimport dateformat from \"dateformat\"\nimport {Helmet} from \"react-helmet\";\n\nexport default ({ data }) => {\n  const blog = data.drupal.nodeById;\n\n  return (\n    <Wrapper>\n\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>פנסיה פתוחה | בלוג | {blog.title}</title>\n        <link rel=\"canonical\" href={`https://www.openpension.org.il${blog.path.alias}`} />\n      </Helmet>\n\n      <div className=\"inner-page blog\">\n        <Breadcrumbs path=\"homepage.blogs.<entityLabel>\" entityLabel={blog.title} />\n\n        <h1>{blog.title}</h1>\n        <span className=\"created\">נוצר בתאריך <b>{dateformat(blog.created * 1000, \"dd/mm/yyyy\")}</b> על ידי <b>{blog.entityOwner.name}</b></span>\n\n        <div className=\"blog-content\" dangerouslySetInnerHTML={{ __html: blog.body.value }}/>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport const query = graphql`\nquery($BlogID: String!) {\n  drupal {\n    nodeById(id: $BlogID) {\n      ... on drupal_NodeBlog {\n        title\n        body {\n          value\n        }\n        path {\n          alias \n        }\n        created\n        entityOwner {\n          ...on drupal_User {\n            name\n            userPicture {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n"],"sourceRoot":""}