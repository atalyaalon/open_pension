{"version":3,"sources":["webpack:///./src/components/Sections/Articles/Articles.js","webpack:///./src/components/Sections/Money/Money.js","webpack:///./src/components/Sections/WhoWeAre/WhoWeAre.js","webpack:///./src/pages/index.js","webpack:///./src/components/Sections/Blogs/Blogs.js"],"names":["article","data","className","href","fieldLink","uri","target","rel","title","tags","queryFieldAuthors","entities","map","tag","key","entityLabel","fieldPublishingDate","value","src","fieldImage","gatsbyImageFile","childImageSharp","fluid","alt","ArticleGrid","drupal","nodeQuery","item","Articles","query","render","id","to","articles","Money","dangerouslySetInnerHTML","__html","body","WhoWeAre","aboutUs","Home","front","Helmet","charSet","Blogs","BlogsGrid","props","result","replace","path","alias","substr","blogs"],"mappings":"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","file":"component---src-pages-index-js-5e550a49044cf8ac046b.js","sourcesContent":["import React from \"react\"\nimport \"./style.scss\";\nimport {graphql, Link, StaticQuery} from \"gatsby\";\n\nconst query = graphql`{\n  drupal {\n    nodeQuery(\n      filter: {conditions: {field: \"type\", value: \"article\"}},\n      limit: 3\n    ) {\n      entities {\n        ... on drupal_NodeArticle {\n          title\n          fieldImage {\n            alt\n            url\n            gatsbyImageFile {\n              childImageSharp {\n                fluid(maxHeight: 300)  {\n                  src\n                }\n              }\n            }\n          }\n          fieldLink {\n            uri\n          }\n          fieldPublishingDate {\n            value\n          }\n          queryFieldAuthors {\n            entities {\n              entityId\n              entityLabel\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst tags = (tags) => <ul>{tags.map((tag, key) => <li key={key}>{tag.entityLabel}</li>)}</ul>\n\nconst article = (data) =>  {\n  return <div>\n    <h3 className=\"title\"><a href={data.fieldLink.uri} target=\"_blank\" rel=\"noreferrer\">{data.title}</a></h3>\n    <p className=\"sub-title\">{tags(data.queryFieldAuthors.entities)}, {data.fieldPublishingDate.value}</p>\n    <a href={data.fieldLink.uri}><img src={data.fieldImage.gatsbyImageFile.childImageSharp.fluid.src} alt={data.fieldImage.alt} className=\"bordered\"/></a>\n  </div>\n}\n\nexport const ArticleGrid = ({data}) => <div className=\"grid-display\">\n  {data.drupal.nodeQuery.entities.map(item => article(item))}\n</div>\n\nexport const articles = (data) => <section className=\"articles\" id=\"articles\">\n  <div className=\"text\">\n    <p className=\"medium\">כתבו עלינו בעיתון</p>\n\n    <h2>ובעוד כמה מקומות</h2>\n\n    <p className=\"big\">\n      בואו תראו את כל המקומות שהוזכרנו או שתרמנו חלק משמעותי לתוכן.\n    </p>\n\n    <ArticleGrid data={data}/>\n\n    <Link to=\"/articles\" className=\"big simple-link\">יש עוד כתבות חוץ מזה. תני מבט!</Link>\n  </div>\n\n</section>\n\nexport const Articles = () => <StaticQuery query={query} render={data => {return articles(data)}}>\n\n</StaticQuery>\n","import React from \"react\"\nimport \"./style.scss\";\nimport {graphql, StaticQuery} from \"gatsby\";\n\nconst query = graphql` {\n  drupal {\n    nodeQuery(filter: {\n      conditions: [\n        {field: \"type\", value: \"page_element\"}, \n        {field: \"field_page\", value: \"front\"}, \n        {field: \"field_section\", value: \"upper\"}\n      ]\n    }) {\n      entities {\n        ... on drupal_NodePageElement {\n          body {\n            value\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const Money = () => <StaticQuery query={query} render={data =>\n  <section className=\"money\">\n    <div className=\"text\" dangerouslySetInnerHTML={{__html: data.drupal.nodeQuery.entities[0].body.value}}>\n    </div>\n  </section>\n}>\n</StaticQuery>\n","import React from \"react\";\nimport \"./style.scss\";\nimport {graphql, StaticQuery} from \"gatsby\";\n\nconst query = graphql` {\n  drupal {\n    nodeQuery(filter: {\n      conditions: [\n        {field: \"type\", value: \"page_element\"}, \n        {field: \"field_page\", value: \"front\"}, \n        {field: \"field_section\", value: \"above-footer\"}\n      ]\n    }) {\n      entities {\n        ... on drupal_NodePageElement {\n          body {\n            value\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst aboutUs = (data) => <section className=\"about-us\" id=\"about-us\">\n  <div className=\"text\" dangerouslySetInnerHTML={{__html: data.drupal.nodeQuery.entities[0].body.value}}>\n  </div>\n\n  <div className=\"contact-us\" id=\"contact-us\">\n    <button>\n      <a href=\"mailto:openpension@googlegroups.com?subject=פידבק על פנסיה פתוחה\">צור קשר</a>\n    </button>\n  </div>\n</section>\n\nexport const WhoWeAre = () => <StaticQuery query={query} render={data => aboutUs(data)}>\n</StaticQuery>\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport './index.scss'\n\nimport {Money} from \"../components/Sections/Money/Money\";\nimport {Blogs} from \"../components/Sections/Blogs/Blogs\";\nimport {Articles} from \"../components/Sections/Articles/Articles\";\nimport {WhoWeAre} from \"../components/Sections/WhoWeAre/WhoWeAre\";\n\nimport {Wrapper} from \"../components/Page\";\n\nexport default function Home() {\n  return <Wrapper front={true}>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>פנסיה פתוחה</title>\n      <link rel=\"canonical\" href=\"https://www.openpension.org.il\" />\n    </Helmet>\n    <Money/>\n    <Blogs/>\n    <Articles/>\n    <WhoWeAre/>\n  </Wrapper>\n}\n","import React from \"react\"\nimport { graphql, StaticQuery, Link } from \"gatsby\"\nimport \"./style.scss\";\n\nconst query = graphql`{\n  drupal {\n    nodeQuery(\n      limit: 3, \n      filter: {conditions: {field: \"type\", value: \"blog\"}}\n    ) {\n      entities {\n        ... on drupal_NodeBlog {\n          title\n          body {\n            value\n          }\n          path {\n            alias\n          }\n          fieldImage {\n            alt\n            url\n            gatsbyImageFile {\n              childImageSharp {\n                fluid(maxHeight: 300)  {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const blog = (data) => {\n  const regex = /(<([^>]+)>)/ig;\n  const result = data.body?.value.replace(regex, '');\n\n  return <div>\n    <h3 className=\"title\"><a href={data.path.alias}>{data.title}</a></h3>\n\n    <p className=\"intro\">{result.substr(0, 350)}</p>\n\n    <img src={data.fieldImage.gatsbyImageFile.childImageSharp.fluid.src} alt={data.fieldImage.alt} />\n  </div>\n}\n\nexport const BlogsGrid = (props) =>\n  <div className=\"grid-display\">\n    {props.data.drupal.nodeQuery.entities.map((item) => blog(item))}\n  </div>\n\nconst blogs = (data) => <section className=\"tools\" id=\"tools\">\n  <div className=\"text\">\n    <p className=\"medium\">מה יש לנו להגיד</p>\n\n    <h2>בלוגים אחרונים</h2>\n\n    <p className=\"big\">\n      הנה התובנות האחרנות שלנו בהתבסס על הנתונים שאספנו.\n    </p>\n\n    <BlogsGrid data={data} />\n\n    <Link to=\"/blogs\" className=\"big simple-link\">יש עוד בלוגים... בוא תקרא</Link>\n  </div>\n</section>\n\nexport const Blogs = () => <StaticQuery query={query} render={data => {return blogs(data)}}></StaticQuery>\n\n"],"sourceRoot":""}